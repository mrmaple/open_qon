"""
$Id: whatsnew.ptl,v 1.7 2006/01/09 06:06:22 alex Exp $
"""
from quixote.html import href
from datetime import datetime
from qon.util import format_ago, format_time_remaining
from qon.search import searchengine
import qon.ui.blocks.util
import qon.ui.blocks.user
import qon.ui.blocks.blog
from qon.base import get_user


def _preview [html] (sr):
    if getattr(sr.obj, str('can_show'), None)==None or sr.obj.can_show():
        '<span class="preview">%s</span><br />' % sr.preview
    else:
        '<span class="preview"><i>Preview folded due to low feedback score.</i></span><br />'

def discussion_topic [html] (sr, preview=True):   
    return _blogitem(0, sr, preview)

def user_news [html] (sr, preview=True):
    return _blogitem(1, sr, preview)

def _blogitem [html] (kind, sr, preview):
    '<dt>'
    if kind==0:
        '<img src="/images/discussionitem_icon.gif" alt="discussion item" title="Discussion Item" height="16" width="16" />&nbsp;'
    else:
        '<img src="/images/personal_news.gif" alt="user news" title="User News" height="16" width="16" />&nbsp;'
    "%s %s" % (href(qon.ui.blocks.util.path_to_obj(sr.obj), "%s" % sr.obj.title), href(qon.ui.blocks.util.path_to_obj(sr.obj) + "feedbacklist", "(%s)" % sr.obj.get_karma_score()))
    if kind==0:
        '<span class="discreet"> in %s</span>' % href(qon.ui.blocks.util.path_to_obj(sr.group), sr.group.display_name())
    else:
        '<span class="discreet"> in personal news of %s</span>' % qon.ui.blocks.user.display_name(sr.obj.author)
    '</dt>'

    '<dd>'
    if preview:
        _preview(sr)
    verb = "Posted"
    date_to_show = sr.obj.date
    by_author = "by %s" % qon.ui.blocks.user.display_name(sr.obj.author)
    if sr.obj.modified:
        verb = "Edited"
        date_to_show = sr.obj.modified
        by_author = ""  # don't know for sure who edited it
    new_comments = ''
    '<span class="search_document_age">%s %s %s %s</span>' % (verb, format_ago(date_to_show), by_author, new_comments) 
    '<br /><br />'
    '</dd>'    
    
def wikipage [html] (sr, preview=True):
    '<dt>'
    '<img src="/images/file_icon.gif" alt="workspace page" title="Workspace Page" height="16" width="16" />&nbsp;'
    "%s %s" % (href(qon.ui.blocks.util.path_to_obj(sr.obj), "%s" % sr.obj.versions[-1].title), href(qon.ui.blocks.util.path_to_obj(sr.obj) + "feedbacklist", "(%s)" % sr.obj.get_karma_score()))     
    '<span class="discreet"> in %s</span>' % href(qon.ui.blocks.util.path_to_obj(sr.group), sr.group.display_name())
    '</dt>'

    '<dd>'
    if preview:
        _preview(sr)
    verb = "Created"
    if len(sr.obj.versions) > 1:
        verb = "Edited"
    '<span class="search_document_age">%s %s by %s (%s revisions total).</span>' % (verb, format_ago(sr.obj.versions[-1].date), qon.ui.blocks.user.display_name(sr.obj.versions[-1].author), len(sr.obj.versions)) 
    '<br /><br />'
    '</dd>'

def poll [html] (sr, preview=True):
    '<dt>'
    '<img src="/images/poll_icon.gif" alt="poll" title="Poll" height="16" width="16" />&nbsp;'
    "%s " % href(qon.ui.blocks.util.path_to_obj(sr.obj), "%s" % sr.obj.title)
    '<span class="discreet"> in %s</span>' % href(qon.ui.blocks.util.path_to_obj(sr.group), sr.group.display_name())
    '</dt>'

    '<dd>'
    if preview:
        _preview(sr)
    '<span class="search_document_age">Created %s by %s. </span>' % (format_ago(sr.obj.date), qon.ui.blocks.user.display_name(sr.obj.creator))
    if datetime.utcnow() > sr.obj.end_date:
        '<span class="search_document_age_alert">Ended %s (%s votes cast)</span>' % (format_ago(sr.obj.end_date), sr.obj.num_votes_cast())     
    else:
        '<span class="search_document_age">Ends in %s (%s votes cast so far)</span>' % (format_time_remaining(sr.obj.end_date), sr.obj.num_votes_cast())
    '<br /><br />'
    '</dd>'    

def discussion_comment [html] (sr, preview=True):   
    return _comments(0, sr, preview)

def user_news_comment [html] (sr, preview=True):
    return _comments(1, sr, preview)

def _comments [html] (kind, sr, preview):
    '<dt>'
    if kind==0:
        '<img src="/images/discussionitem_icon.gif" alt="discussion item" title="Discussion Item" height="16" width="16" />&nbsp;'
    else:
        '<img src="/images/personal_news.gif" alt="user news" title="User News" height="16" width="16" />&nbsp;'
    "%s %s" % (href(qon.ui.blocks.util.path_to_obj(sr.obj.parent_blogitem), "%s" % sr.obj.parent_blogitem.title, title=qon.ui.blocks.blog.format_item_title_tooltip(sr.obj.parent_blogitem)), href(qon.ui.blocks.util.path_to_obj(sr.obj.parent_blogitem) + "feedbacklist", "(%s)" % sr.obj.parent_blogitem.get_karma_score()))
    if kind==0:
        '<span class="discreet"> in %s</span>' % href(qon.ui.blocks.util.path_to_obj(sr.group), sr.group.display_name())
    else:
        '<span class="discreet"> in personal news of %s</span>' % qon.ui.blocks.user.display_name(sr.obj.parent_blogitem.author)

    '</dt>'

    '<dd>'
    if preview:
        '<span class="discreet">%s %s: </span>' % (href(qon.ui.blocks.blog.path_to_comment(sr.obj.parent_blogitem, sr.obj), 'Comment #%s' % (sr.obj.parent_blogitem.comment_index(sr.obj) + 1)), href(qon.ui.blocks.blog.path_to_comment(sr.obj.parent_blogitem, sr.obj) + "feedbacklist", "(%s)" % sr.obj.get_karma_score()))        
        _preview(sr)
    verb = "Posted"
    date_to_show = sr.obj.date
    by_author = "by %s" % qon.ui.blocks.user.display_name(sr.obj.author)    
    new_comments = ''
    num_comments = sr.obj.parent_blogitem.num_all_comments()
    # comment_index = sr.obj.parent_blogitem.comment_index(sr.obj)
    if get_user():
        old, new = sr.obj.parent_blogitem.num_old_new_comments(sr.obj.parent_blogitem.last_read(get_user()))
        if new == 0:
            new_comments = '- (0 new to me)'
        else:
            new_comments = '- (' + str(new) + ' ' + href(qon.ui.blocks.blog.full_path_to_unread(sr.obj.parent_blogitem, get_user()),  'new') + ' to me)'        
    if sr.obj.modified:
        verb = "Edited"
        date_to_show = sr.obj.modified
        by_author = ""  # don't know for sure who edited it        
    '<span class="search_document_age"> %s %s %s (%s comments total) %s</span>' % (verb, format_ago(date_to_show), by_author, href(qon.ui.blocks.blog.path_to_comment_in_item(sr.obj.parent_blogitem, sr.obj.parent_blogitem.get_all_comments()[-1]), str(num_comments)), new_comments)         
    '<br /><br />'
    '</dd>'    

